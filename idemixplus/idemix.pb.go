// Code generated by protoc-gen-go. DO NOT EDIT.
// source: idemix.proto

package idemixplus

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ECP is an elliptic curve point specified by its coordinates
// ECP corresponds to an element of the first group (G1)
type ECP struct {
	X                    []byte   `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    []byte   `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECP) Reset()         { *m = ECP{} }
func (m *ECP) String() string { return proto.CompactTextString(m) }
func (*ECP) ProtoMessage()    {}
func (*ECP) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{0}
}

func (m *ECP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECP.Unmarshal(m, b)
}
func (m *ECP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECP.Marshal(b, m, deterministic)
}
func (m *ECP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECP.Merge(m, src)
}
func (m *ECP) XXX_Size() int {
	return xxx_messageInfo_ECP.Size(m)
}
func (m *ECP) XXX_DiscardUnknown() {
	xxx_messageInfo_ECP.DiscardUnknown(m)
}

var xxx_messageInfo_ECP proto.InternalMessageInfo

func (m *ECP) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *ECP) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

// ECP2 is an elliptic curve point specified by its coordinates
// ECP2 corresponds to an element of the second group (G2)
type ECP2 struct {
	Xa                   []byte   `protobuf:"bytes,1,opt,name=xa,proto3" json:"xa,omitempty"`
	Xb                   []byte   `protobuf:"bytes,2,opt,name=xb,proto3" json:"xb,omitempty"`
	Ya                   []byte   `protobuf:"bytes,3,opt,name=ya,proto3" json:"ya,omitempty"`
	Yb                   []byte   `protobuf:"bytes,4,opt,name=yb,proto3" json:"yb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECP2) Reset()         { *m = ECP2{} }
func (m *ECP2) String() string { return proto.CompactTextString(m) }
func (*ECP2) ProtoMessage()    {}
func (*ECP2) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{1}
}

func (m *ECP2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECP2.Unmarshal(m, b)
}
func (m *ECP2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECP2.Marshal(b, m, deterministic)
}
func (m *ECP2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECP2.Merge(m, src)
}
func (m *ECP2) XXX_Size() int {
	return xxx_messageInfo_ECP2.Size(m)
}
func (m *ECP2) XXX_DiscardUnknown() {
	xxx_messageInfo_ECP2.DiscardUnknown(m)
}

var xxx_messageInfo_ECP2 proto.InternalMessageInfo

func (m *ECP2) GetXa() []byte {
	if m != nil {
		return m.Xa
	}
	return nil
}

func (m *ECP2) GetXb() []byte {
	if m != nil {
		return m.Xb
	}
	return nil
}

func (m *ECP2) GetYa() []byte {
	if m != nil {
		return m.Ya
	}
	return nil
}

func (m *ECP2) GetYb() []byte {
	if m != nil {
		return m.Yb
	}
	return nil
}

// IssuerPublicKey specifies an issuer public key that consists of
// attribute_names - a list of the attribute names of a credential issued by the
// issuer h_sk, h_rand, h_attrs, w, bar_g1, bar_g2 - group elements
// corresponding to the signing key, randomness, and attributes proof_c, proof_s
// compose a zero-knowledge proof of knowledge of the secret key hash is a hash
// of the public key appended to it
type IssuerPublicKey struct {
	AttributeNames       []string `protobuf:"bytes,1,rep,name=attribute_names,json=attributeNames,proto3" json:"attribute_names,omitempty"`
	HSk                  *ECP     `protobuf:"bytes,2,opt,name=h_sk,json=hSk,proto3" json:"h_sk,omitempty"`
	HRand                *ECP     `protobuf:"bytes,3,opt,name=h_rand,json=hRand,proto3" json:"h_rand,omitempty"`
	BarX                 *ECP2    `protobuf:"bytes,4,opt,name=bar_x,json=barX,proto3" json:"bar_x,omitempty"`
	BarY                 *ECP2    `protobuf:"bytes,5,opt,name=bar_y,json=barY,proto3" json:"bar_y,omitempty"`
	BarG1                *ECP     `protobuf:"bytes,6,opt,name=bar_g1,json=barG1,proto3" json:"bar_g1,omitempty"`
	BarG2                *ECP     `protobuf:"bytes,7,opt,name=bar_g2,json=barG2,proto3" json:"bar_g2,omitempty"`
	BarG3                *ECP     `protobuf:"bytes,8,opt,name=bar_g3,json=barG3,proto3" json:"bar_g3,omitempty"`
	ProofCX              []byte   `protobuf:"bytes,9,opt,name=proof_c_x,json=proofCX,proto3" json:"proof_c_x,omitempty"`
	ProofSX              []byte   `protobuf:"bytes,10,opt,name=proof_s_x,json=proofSX,proto3" json:"proof_s_x,omitempty"`
	ProofCY              []byte   `protobuf:"bytes,11,opt,name=proof_c_y,json=proofCY,proto3" json:"proof_c_y,omitempty"`
	ProofSY              []byte   `protobuf:"bytes,12,opt,name=proof_s_y,json=proofSY,proto3" json:"proof_s_y,omitempty"`
	Hash                 []byte   `protobuf:"bytes,13,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssuerPublicKey) Reset()         { *m = IssuerPublicKey{} }
func (m *IssuerPublicKey) String() string { return proto.CompactTextString(m) }
func (*IssuerPublicKey) ProtoMessage()    {}
func (*IssuerPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{2}
}

func (m *IssuerPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssuerPublicKey.Unmarshal(m, b)
}
func (m *IssuerPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssuerPublicKey.Marshal(b, m, deterministic)
}
func (m *IssuerPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssuerPublicKey.Merge(m, src)
}
func (m *IssuerPublicKey) XXX_Size() int {
	return xxx_messageInfo_IssuerPublicKey.Size(m)
}
func (m *IssuerPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_IssuerPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_IssuerPublicKey proto.InternalMessageInfo

func (m *IssuerPublicKey) GetAttributeNames() []string {
	if m != nil {
		return m.AttributeNames
	}
	return nil
}

func (m *IssuerPublicKey) GetHSk() *ECP {
	if m != nil {
		return m.HSk
	}
	return nil
}

func (m *IssuerPublicKey) GetHRand() *ECP {
	if m != nil {
		return m.HRand
	}
	return nil
}

func (m *IssuerPublicKey) GetBarX() *ECP2 {
	if m != nil {
		return m.BarX
	}
	return nil
}

func (m *IssuerPublicKey) GetBarY() *ECP2 {
	if m != nil {
		return m.BarY
	}
	return nil
}

func (m *IssuerPublicKey) GetBarG1() *ECP {
	if m != nil {
		return m.BarG1
	}
	return nil
}

func (m *IssuerPublicKey) GetBarG2() *ECP {
	if m != nil {
		return m.BarG2
	}
	return nil
}

func (m *IssuerPublicKey) GetBarG3() *ECP {
	if m != nil {
		return m.BarG3
	}
	return nil
}

func (m *IssuerPublicKey) GetProofCX() []byte {
	if m != nil {
		return m.ProofCX
	}
	return nil
}

func (m *IssuerPublicKey) GetProofSX() []byte {
	if m != nil {
		return m.ProofSX
	}
	return nil
}

func (m *IssuerPublicKey) GetProofCY() []byte {
	if m != nil {
		return m.ProofCY
	}
	return nil
}

func (m *IssuerPublicKey) GetProofSY() []byte {
	if m != nil {
		return m.ProofSY
	}
	return nil
}

func (m *IssuerPublicKey) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type SecretKey struct {
	X                    []byte   `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    []byte   `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecretKey) Reset()         { *m = SecretKey{} }
func (m *SecretKey) String() string { return proto.CompactTextString(m) }
func (*SecretKey) ProtoMessage()    {}
func (*SecretKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{3}
}

func (m *SecretKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretKey.Unmarshal(m, b)
}
func (m *SecretKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretKey.Marshal(b, m, deterministic)
}
func (m *SecretKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretKey.Merge(m, src)
}
func (m *SecretKey) XXX_Size() int {
	return xxx_messageInfo_SecretKey.Size(m)
}
func (m *SecretKey) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretKey.DiscardUnknown(m)
}

var xxx_messageInfo_SecretKey proto.InternalMessageInfo

func (m *SecretKey) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *SecretKey) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

// IssuerKey specifies an issuer key pair that consists of
// ISk - the issuer secret key and
// IssuerPublicKey - the issuer public key
type IssuerKey struct {
	Isk                  *SecretKey       `protobuf:"bytes,1,opt,name=isk,proto3" json:"isk,omitempty"`
	Ipk                  *IssuerPublicKey `protobuf:"bytes,2,opt,name=ipk,proto3" json:"ipk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IssuerKey) Reset()         { *m = IssuerKey{} }
func (m *IssuerKey) String() string { return proto.CompactTextString(m) }
func (*IssuerKey) ProtoMessage()    {}
func (*IssuerKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{4}
}

func (m *IssuerKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssuerKey.Unmarshal(m, b)
}
func (m *IssuerKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssuerKey.Marshal(b, m, deterministic)
}
func (m *IssuerKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssuerKey.Merge(m, src)
}
func (m *IssuerKey) XXX_Size() int {
	return xxx_messageInfo_IssuerKey.Size(m)
}
func (m *IssuerKey) XXX_DiscardUnknown() {
	xxx_messageInfo_IssuerKey.DiscardUnknown(m)
}

var xxx_messageInfo_IssuerKey proto.InternalMessageInfo

func (m *IssuerKey) GetIsk() *SecretKey {
	if m != nil {
		return m.Isk
	}
	return nil
}

func (m *IssuerKey) GetIpk() *IssuerPublicKey {
	if m != nil {
		return m.Ipk
	}
	return nil
}

// ADD user key
type UserPublicKey struct {
	AttributeNames       []string `protobuf:"bytes,1,rep,name=attribute_names,json=attributeNames,proto3" json:"attribute_names,omitempty"`
	HSk                  *ECP     `protobuf:"bytes,2,opt,name=h_sk,json=hSk,proto3" json:"h_sk,omitempty"`
	HRand                *ECP     `protobuf:"bytes,3,opt,name=h_rand,json=hRand,proto3" json:"h_rand,omitempty"`
	W                    *ECP2    `protobuf:"bytes,4,opt,name=w,proto3" json:"w,omitempty"`
	BarG1                *ECP     `protobuf:"bytes,5,opt,name=bar_g1,json=barG1,proto3" json:"bar_g1,omitempty"`
	BarG2                *ECP     `protobuf:"bytes,6,opt,name=bar_g2,json=barG2,proto3" json:"bar_g2,omitempty"`
	ProofC               []byte   `protobuf:"bytes,7,opt,name=proof_c,json=proofC,proto3" json:"proof_c,omitempty"`
	ProofS               []byte   `protobuf:"bytes,8,opt,name=proof_s,json=proofS,proto3" json:"proof_s,omitempty"`
	Hash                 []byte   `protobuf:"bytes,9,opt,name=hash,proto3" json:"hash,omitempty"`
	UPK                  *ECP     `protobuf:"bytes,10,opt,name=UPK,proto3" json:"UPK,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserPublicKey) Reset()         { *m = UserPublicKey{} }
func (m *UserPublicKey) String() string { return proto.CompactTextString(m) }
func (*UserPublicKey) ProtoMessage()    {}
func (*UserPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{5}
}

func (m *UserPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPublicKey.Unmarshal(m, b)
}
func (m *UserPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPublicKey.Marshal(b, m, deterministic)
}
func (m *UserPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPublicKey.Merge(m, src)
}
func (m *UserPublicKey) XXX_Size() int {
	return xxx_messageInfo_UserPublicKey.Size(m)
}
func (m *UserPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_UserPublicKey proto.InternalMessageInfo

func (m *UserPublicKey) GetAttributeNames() []string {
	if m != nil {
		return m.AttributeNames
	}
	return nil
}

func (m *UserPublicKey) GetHSk() *ECP {
	if m != nil {
		return m.HSk
	}
	return nil
}

func (m *UserPublicKey) GetHRand() *ECP {
	if m != nil {
		return m.HRand
	}
	return nil
}

func (m *UserPublicKey) GetW() *ECP2 {
	if m != nil {
		return m.W
	}
	return nil
}

func (m *UserPublicKey) GetBarG1() *ECP {
	if m != nil {
		return m.BarG1
	}
	return nil
}

func (m *UserPublicKey) GetBarG2() *ECP {
	if m != nil {
		return m.BarG2
	}
	return nil
}

func (m *UserPublicKey) GetProofC() []byte {
	if m != nil {
		return m.ProofC
	}
	return nil
}

func (m *UserPublicKey) GetProofS() []byte {
	if m != nil {
		return m.ProofS
	}
	return nil
}

func (m *UserPublicKey) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *UserPublicKey) GetUPK() *ECP {
	if m != nil {
		return m.UPK
	}
	return nil
}

type Trace struct {
	T                    *ECP2          `protobuf:"bytes,1,opt,name=T,proto3" json:"T,omitempty"`
	Upk                  *UserPublicKey `protobuf:"bytes,2,opt,name=upk,proto3" json:"upk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Trace) Reset()         { *m = Trace{} }
func (m *Trace) String() string { return proto.CompactTextString(m) }
func (*Trace) ProtoMessage()    {}
func (*Trace) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{6}
}

func (m *Trace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trace.Unmarshal(m, b)
}
func (m *Trace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trace.Marshal(b, m, deterministic)
}
func (m *Trace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trace.Merge(m, src)
}
func (m *Trace) XXX_Size() int {
	return xxx_messageInfo_Trace.Size(m)
}
func (m *Trace) XXX_DiscardUnknown() {
	xxx_messageInfo_Trace.DiscardUnknown(m)
}

var xxx_messageInfo_Trace proto.InternalMessageInfo

func (m *Trace) GetT() *ECP2 {
	if m != nil {
		return m.T
	}
	return nil
}

func (m *Trace) GetUpk() *UserPublicKey {
	if m != nil {
		return m.Upk
	}
	return nil
}

// for traces
type Traces struct {
	TraceList            []*Trace `protobuf:"bytes,1,rep,name=traceList,proto3" json:"traceList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Traces) Reset()         { *m = Traces{} }
func (m *Traces) String() string { return proto.CompactTextString(m) }
func (*Traces) ProtoMessage()    {}
func (*Traces) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{7}
}

func (m *Traces) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Traces.Unmarshal(m, b)
}
func (m *Traces) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Traces.Marshal(b, m, deterministic)
}
func (m *Traces) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Traces.Merge(m, src)
}
func (m *Traces) XXX_Size() int {
	return xxx_messageInfo_Traces.Size(m)
}
func (m *Traces) XXX_DiscardUnknown() {
	xxx_messageInfo_Traces.DiscardUnknown(m)
}

var xxx_messageInfo_Traces proto.InternalMessageInfo

func (m *Traces) GetTraceList() []*Trace {
	if m != nil {
		return m.TraceList
	}
	return nil
}

type UserSecretKey struct {
	X                    []byte   `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSecretKey) Reset()         { *m = UserSecretKey{} }
func (m *UserSecretKey) String() string { return proto.CompactTextString(m) }
func (*UserSecretKey) ProtoMessage()    {}
func (*UserSecretKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{8}
}

func (m *UserSecretKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSecretKey.Unmarshal(m, b)
}
func (m *UserSecretKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSecretKey.Marshal(b, m, deterministic)
}
func (m *UserSecretKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSecretKey.Merge(m, src)
}
func (m *UserSecretKey) XXX_Size() int {
	return xxx_messageInfo_UserSecretKey.Size(m)
}
func (m *UserSecretKey) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSecretKey.DiscardUnknown(m)
}

var xxx_messageInfo_UserSecretKey proto.InternalMessageInfo

func (m *UserSecretKey) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

type UserKey struct {
	Usk                  *UserSecretKey `protobuf:"bytes,1,opt,name=usk,proto3" json:"usk,omitempty"`
	Upk                  *UserPublicKey `protobuf:"bytes,2,opt,name=upk,proto3" json:"upk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UserKey) Reset()         { *m = UserKey{} }
func (m *UserKey) String() string { return proto.CompactTextString(m) }
func (*UserKey) ProtoMessage()    {}
func (*UserKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{9}
}

func (m *UserKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserKey.Unmarshal(m, b)
}
func (m *UserKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserKey.Marshal(b, m, deterministic)
}
func (m *UserKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserKey.Merge(m, src)
}
func (m *UserKey) XXX_Size() int {
	return xxx_messageInfo_UserKey.Size(m)
}
func (m *UserKey) XXX_DiscardUnknown() {
	xxx_messageInfo_UserKey.DiscardUnknown(m)
}

var xxx_messageInfo_UserKey proto.InternalMessageInfo

func (m *UserKey) GetUsk() *UserSecretKey {
	if m != nil {
		return m.Usk
	}
	return nil
}

func (m *UserKey) GetUpk() *UserPublicKey {
	if m != nil {
		return m.Upk
	}
	return nil
}

type SignedAttribute struct {
	A                    *ECP     `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    *ECP     `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedAttribute) Reset()         { *m = SignedAttribute{} }
func (m *SignedAttribute) String() string { return proto.CompactTextString(m) }
func (*SignedAttribute) ProtoMessage()    {}
func (*SignedAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{10}
}

func (m *SignedAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedAttribute.Unmarshal(m, b)
}
func (m *SignedAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedAttribute.Marshal(b, m, deterministic)
}
func (m *SignedAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedAttribute.Merge(m, src)
}
func (m *SignedAttribute) XXX_Size() int {
	return xxx_messageInfo_SignedAttribute.Size(m)
}
func (m *SignedAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_SignedAttribute proto.InternalMessageInfo

func (m *SignedAttribute) GetA() *ECP {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *SignedAttribute) GetB() *ECP {
	if m != nil {
		return m.B
	}
	return nil
}

type HiddenAttribute struct {
	Sigma_1              *ECP     `protobuf:"bytes,1,opt,name=sigma_1,json=sigma1,proto3" json:"sigma_1,omitempty"`
	Sigma_2              *ECP     `protobuf:"bytes,2,opt,name=sigma_2,json=sigma2,proto3" json:"sigma_2,omitempty"`
	Sigma_3              *ECP     `protobuf:"bytes,3,opt,name=sigma_3,json=sigma3,proto3" json:"sigma_3,omitempty"`
	ProofC               []byte   `protobuf:"bytes,4,opt,name=proof_c,json=proofC,proto3" json:"proof_c,omitempty"`
	ProofS               []byte   `protobuf:"bytes,5,opt,name=proof_s,json=proofS,proto3" json:"proof_s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HiddenAttribute) Reset()         { *m = HiddenAttribute{} }
func (m *HiddenAttribute) String() string { return proto.CompactTextString(m) }
func (*HiddenAttribute) ProtoMessage()    {}
func (*HiddenAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{11}
}

func (m *HiddenAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiddenAttribute.Unmarshal(m, b)
}
func (m *HiddenAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiddenAttribute.Marshal(b, m, deterministic)
}
func (m *HiddenAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiddenAttribute.Merge(m, src)
}
func (m *HiddenAttribute) XXX_Size() int {
	return xxx_messageInfo_HiddenAttribute.Size(m)
}
func (m *HiddenAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_HiddenAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_HiddenAttribute proto.InternalMessageInfo

func (m *HiddenAttribute) GetSigma_1() *ECP {
	if m != nil {
		return m.Sigma_1
	}
	return nil
}

func (m *HiddenAttribute) GetSigma_2() *ECP {
	if m != nil {
		return m.Sigma_2
	}
	return nil
}

func (m *HiddenAttribute) GetSigma_3() *ECP {
	if m != nil {
		return m.Sigma_3
	}
	return nil
}

func (m *HiddenAttribute) GetProofC() []byte {
	if m != nil {
		return m.ProofC
	}
	return nil
}

func (m *HiddenAttribute) GetProofS() []byte {
	if m != nil {
		return m.ProofS
	}
	return nil
}

// Credential specifies a credential object that consists of
// a, b, e, s - signature value
// attrs - attribute values
type Credential struct {
	Creds                []*SignedAttribute `protobuf:"bytes,1,rep,name=creds,proto3" json:"creds,omitempty"`
	AttributeNames       []string           `protobuf:"bytes,2,rep,name=attribute_names,json=attributeNames,proto3" json:"attribute_names,omitempty"`
	Attrs                [][]byte           `protobuf:"bytes,3,rep,name=attrs,proto3" json:"attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Credential) Reset()         { *m = Credential{} }
func (m *Credential) String() string { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()    {}
func (*Credential) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{12}
}

func (m *Credential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credential.Unmarshal(m, b)
}
func (m *Credential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credential.Marshal(b, m, deterministic)
}
func (m *Credential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credential.Merge(m, src)
}
func (m *Credential) XXX_Size() int {
	return xxx_messageInfo_Credential.Size(m)
}
func (m *Credential) XXX_DiscardUnknown() {
	xxx_messageInfo_Credential.DiscardUnknown(m)
}

var xxx_messageInfo_Credential proto.InternalMessageInfo

func (m *Credential) GetCreds() []*SignedAttribute {
	if m != nil {
		return m.Creds
	}
	return nil
}

func (m *Credential) GetAttributeNames() []string {
	if m != nil {
		return m.AttributeNames
	}
	return nil
}

func (m *Credential) GetAttrs() [][]byte {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type NymSignature struct {
	Eta   *ECP               `protobuf:"bytes,1,opt,name=eta,proto3" json:"eta,omitempty"`
	Xi    *ECP               `protobuf:"bytes,2,opt,name=xi,proto3" json:"xi,omitempty"`
	Hides []*HiddenAttribute `protobuf:"bytes,3,rep,name=hides,proto3" json:"hides,omitempty"`
	Attrs [][]byte           `protobuf:"bytes,4,rep,name=attrs,proto3" json:"attrs,omitempty"`
	Nonce []byte             `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// TODO add code ========================
	RevocationPkSig      []byte              `protobuf:"bytes,6,opt,name=revocation_pk_sig,json=revocationPkSig,proto3" json:"revocation_pk_sig,omitempty"`
	Epoch                int64               `protobuf:"varint,7,opt,name=epoch,proto3" json:"epoch,omitempty"`
	NonRevocationProof   *NonRevocationProof `protobuf:"bytes,8,opt,name=non_revocation_proof,json=nonRevocationProof,proto3" json:"non_revocation_proof,omitempty"`
	RevocationEpochPk    *ECP2               `protobuf:"bytes,9,opt,name=revocation_epoch_pk,json=revocationEpochPk,proto3" json:"revocation_epoch_pk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NymSignature) Reset()         { *m = NymSignature{} }
func (m *NymSignature) String() string { return proto.CompactTextString(m) }
func (*NymSignature) ProtoMessage()    {}
func (*NymSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{13}
}

func (m *NymSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NymSignature.Unmarshal(m, b)
}
func (m *NymSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NymSignature.Marshal(b, m, deterministic)
}
func (m *NymSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NymSignature.Merge(m, src)
}
func (m *NymSignature) XXX_Size() int {
	return xxx_messageInfo_NymSignature.Size(m)
}
func (m *NymSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_NymSignature.DiscardUnknown(m)
}

var xxx_messageInfo_NymSignature proto.InternalMessageInfo

func (m *NymSignature) GetEta() *ECP {
	if m != nil {
		return m.Eta
	}
	return nil
}

func (m *NymSignature) GetXi() *ECP {
	if m != nil {
		return m.Xi
	}
	return nil
}

func (m *NymSignature) GetHides() []*HiddenAttribute {
	if m != nil {
		return m.Hides
	}
	return nil
}

func (m *NymSignature) GetAttrs() [][]byte {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func (m *NymSignature) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *NymSignature) GetRevocationPkSig() []byte {
	if m != nil {
		return m.RevocationPkSig
	}
	return nil
}

func (m *NymSignature) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *NymSignature) GetNonRevocationProof() *NonRevocationProof {
	if m != nil {
		return m.NonRevocationProof
	}
	return nil
}

func (m *NymSignature) GetRevocationEpochPk() *ECP2 {
	if m != nil {
		return m.RevocationEpochPk
	}
	return nil
}

// CredRequest specifies a credential request object that consists of
// nym - a pseudonym, which is a commitment to the user secret
// issuer_nonce - a random nonce provided by the issuer
// proof_c, proof_s - a zero-knowledge proof of knowledge of the
// user secret inside Nym
type CredRequest struct {
	Nym                  *ECP     `protobuf:"bytes,1,opt,name=nym,proto3" json:"nym,omitempty"`
	IssuerNonce          []byte   `protobuf:"bytes,2,opt,name=issuer_nonce,json=issuerNonce,proto3" json:"issuer_nonce,omitempty"`
	ProofC               []byte   `protobuf:"bytes,3,opt,name=proof_c,json=proofC,proto3" json:"proof_c,omitempty"`
	ProofS1              []byte   `protobuf:"bytes,4,opt,name=proof_s1,json=proofS1,proto3" json:"proof_s1,omitempty"`
	ProofS2              []byte   `protobuf:"bytes,5,opt,name=proof_s2,json=proofS2,proto3" json:"proof_s2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CredRequest) Reset()         { *m = CredRequest{} }
func (m *CredRequest) String() string { return proto.CompactTextString(m) }
func (*CredRequest) ProtoMessage()    {}
func (*CredRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{14}
}

func (m *CredRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CredRequest.Unmarshal(m, b)
}
func (m *CredRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CredRequest.Marshal(b, m, deterministic)
}
func (m *CredRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CredRequest.Merge(m, src)
}
func (m *CredRequest) XXX_Size() int {
	return xxx_messageInfo_CredRequest.Size(m)
}
func (m *CredRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CredRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CredRequest proto.InternalMessageInfo

func (m *CredRequest) GetNym() *ECP {
	if m != nil {
		return m.Nym
	}
	return nil
}

func (m *CredRequest) GetIssuerNonce() []byte {
	if m != nil {
		return m.IssuerNonce
	}
	return nil
}

func (m *CredRequest) GetProofC() []byte {
	if m != nil {
		return m.ProofC
	}
	return nil
}

func (m *CredRequest) GetProofS1() []byte {
	if m != nil {
		return m.ProofS1
	}
	return nil
}

func (m *CredRequest) GetProofS2() []byte {
	if m != nil {
		return m.ProofS2
	}
	return nil
}

// NonRevocationProof contains proof that the credential is not revoked
type NonRevocationProof struct {
	RevocationAlg        int32    `protobuf:"varint,1,opt,name=revocation_alg,json=revocationAlg,proto3" json:"revocation_alg,omitempty"`
	NonRevocationProof   []byte   `protobuf:"bytes,2,opt,name=non_revocation_proof,json=nonRevocationProof,proto3" json:"non_revocation_proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonRevocationProof) Reset()         { *m = NonRevocationProof{} }
func (m *NonRevocationProof) String() string { return proto.CompactTextString(m) }
func (*NonRevocationProof) ProtoMessage()    {}
func (*NonRevocationProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{15}
}

func (m *NonRevocationProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonRevocationProof.Unmarshal(m, b)
}
func (m *NonRevocationProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonRevocationProof.Marshal(b, m, deterministic)
}
func (m *NonRevocationProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonRevocationProof.Merge(m, src)
}
func (m *NonRevocationProof) XXX_Size() int {
	return xxx_messageInfo_NonRevocationProof.Size(m)
}
func (m *NonRevocationProof) XXX_DiscardUnknown() {
	xxx_messageInfo_NonRevocationProof.DiscardUnknown(m)
}

var xxx_messageInfo_NonRevocationProof proto.InternalMessageInfo

func (m *NonRevocationProof) GetRevocationAlg() int32 {
	if m != nil {
		return m.RevocationAlg
	}
	return 0
}

func (m *NonRevocationProof) GetNonRevocationProof() []byte {
	if m != nil {
		return m.NonRevocationProof
	}
	return nil
}

type CredentialRevocationInformation struct {
	// epoch contains the epoch (time window) in which this CRI is valid
	Epoch int64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// epoch_pk is the public key that is used by the revocation authority in this
	// epoch
	EpochPk *ECP2 `protobuf:"bytes,2,opt,name=epoch_pk,json=epochPk,proto3" json:"epoch_pk,omitempty"`
	// epoch_pk_sig is a signature on the EpochPK valid under the revocation
	// authority's long term key
	EpochPkSig []byte `protobuf:"bytes,3,opt,name=epoch_pk_sig,json=epochPkSig,proto3" json:"epoch_pk_sig,omitempty"`
	// revocation_alg denotes which revocation algorithm is used
	RevocationAlg int32 `protobuf:"varint,4,opt,name=revocation_alg,json=revocationAlg,proto3" json:"revocation_alg,omitempty"`
	// revocation_data contains data specific to the revocation algorithm used
	RevocationData       []byte   `protobuf:"bytes,5,opt,name=revocation_data,json=revocationData,proto3" json:"revocation_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CredentialRevocationInformation) Reset()         { *m = CredentialRevocationInformation{} }
func (m *CredentialRevocationInformation) String() string { return proto.CompactTextString(m) }
func (*CredentialRevocationInformation) ProtoMessage()    {}
func (*CredentialRevocationInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{16}
}

func (m *CredentialRevocationInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CredentialRevocationInformation.Unmarshal(m, b)
}
func (m *CredentialRevocationInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CredentialRevocationInformation.Marshal(b, m, deterministic)
}
func (m *CredentialRevocationInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CredentialRevocationInformation.Merge(m, src)
}
func (m *CredentialRevocationInformation) XXX_Size() int {
	return xxx_messageInfo_CredentialRevocationInformation.Size(m)
}
func (m *CredentialRevocationInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_CredentialRevocationInformation.DiscardUnknown(m)
}

var xxx_messageInfo_CredentialRevocationInformation proto.InternalMessageInfo

func (m *CredentialRevocationInformation) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *CredentialRevocationInformation) GetEpochPk() *ECP2 {
	if m != nil {
		return m.EpochPk
	}
	return nil
}

func (m *CredentialRevocationInformation) GetEpochPkSig() []byte {
	if m != nil {
		return m.EpochPkSig
	}
	return nil
}

func (m *CredentialRevocationInformation) GetRevocationAlg() int32 {
	if m != nil {
		return m.RevocationAlg
	}
	return 0
}

func (m *CredentialRevocationInformation) GetRevocationData() []byte {
	if m != nil {
		return m.RevocationData
	}
	return nil
}

// for Certificate
type Certificate struct {
	Cn                   string   `protobuf:"bytes,1,opt,name=cn,proto3" json:"cn,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CaName               string   `protobuf:"bytes,3,opt,name=ca_name,json=caName,proto3" json:"ca_name,omitempty"`
	SerialNumber         string   `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Hosts                []string `protobuf:"bytes,5,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Certificate) Reset()         { *m = Certificate{} }
func (m *Certificate) String() string { return proto.CompactTextString(m) }
func (*Certificate) ProtoMessage()    {}
func (*Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d23908e9a304c6, []int{17}
}

func (m *Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Certificate.Unmarshal(m, b)
}
func (m *Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Certificate.Marshal(b, m, deterministic)
}
func (m *Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Certificate.Merge(m, src)
}
func (m *Certificate) XXX_Size() int {
	return xxx_messageInfo_Certificate.Size(m)
}
func (m *Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_Certificate proto.InternalMessageInfo

func (m *Certificate) GetCn() string {
	if m != nil {
		return m.Cn
	}
	return ""
}

func (m *Certificate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Certificate) GetCaName() string {
	if m != nil {
		return m.CaName
	}
	return ""
}

func (m *Certificate) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Certificate) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func init() {
	proto.RegisterType((*ECP)(nil), "ECP")
	proto.RegisterType((*ECP2)(nil), "ECP2")
	proto.RegisterType((*IssuerPublicKey)(nil), "IssuerPublicKey")
	proto.RegisterType((*SecretKey)(nil), "SecretKey")
	proto.RegisterType((*IssuerKey)(nil), "IssuerKey")
	proto.RegisterType((*UserPublicKey)(nil), "UserPublicKey")
	proto.RegisterType((*Trace)(nil), "Trace")
	proto.RegisterType((*Traces)(nil), "Traces")
	proto.RegisterType((*UserSecretKey)(nil), "UserSecretKey")
	proto.RegisterType((*UserKey)(nil), "UserKey")
	proto.RegisterType((*SignedAttribute)(nil), "SignedAttribute")
	proto.RegisterType((*HiddenAttribute)(nil), "HiddenAttribute")
	proto.RegisterType((*Credential)(nil), "Credential")
	proto.RegisterType((*NymSignature)(nil), "NymSignature")
	proto.RegisterType((*CredRequest)(nil), "CredRequest")
	proto.RegisterType((*NonRevocationProof)(nil), "NonRevocationProof")
	proto.RegisterType((*CredentialRevocationInformation)(nil), "CredentialRevocationInformation")
	proto.RegisterType((*Certificate)(nil), "Certificate")
}

func init() { proto.RegisterFile("idemix.proto", fileDescriptor_28d23908e9a304c6) }

var fileDescriptor_28d23908e9a304c6 = []byte{
	// 1043 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x4d, 0x6f, 0xe3, 0x36,
	0x10, 0x85, 0x24, 0x7f, 0x44, 0x63, 0x25, 0xd9, 0x32, 0x41, 0x57, 0xdd, 0x76, 0x51, 0xaf, 0xfa,
	0x91, 0x60, 0x0f, 0x4e, 0xad, 0xa0, 0x87, 0x5e, 0x0a, 0x6c, 0xd3, 0xb4, 0x5d, 0xa4, 0x1b, 0x18,
	0x74, 0x02, 0x24, 0xbd, 0x08, 0x94, 0xc4, 0x58, 0x84, 0x6d, 0xc9, 0x15, 0xe5, 0xae, 0x74, 0x2e,
	0xfa, 0x1b, 0x7a, 0xe8, 0xa5, 0xff, 0xa7, 0x97, 0xfe, 0xa4, 0x82, 0xa4, 0x6c, 0xd1, 0x4e, 0xb2,
	0xe8, 0x69, 0x6f, 0x9a, 0xf7, 0xc8, 0xe1, 0xf0, 0xbd, 0x19, 0x42, 0xe0, 0xb0, 0x98, 0xce, 0x59,
	0x39, 0x58, 0xe4, 0x59, 0x91, 0x79, 0x2f, 0xc0, 0x3a, 0x3f, 0x1b, 0x21, 0x07, 0x8c, 0xd2, 0x35,
	0xfa, 0xc6, 0xb1, 0x83, 0x8d, 0x52, 0x44, 0x95, 0x6b, 0xaa, 0xa8, 0xf2, 0x7e, 0x80, 0xd6, 0xf9,
	0xd9, 0xc8, 0x47, 0x7b, 0x60, 0x96, 0xa4, 0x5e, 0x64, 0x96, 0x44, 0xc6, 0x61, 0xbd, 0xcc, 0x2c,
	0x43, 0x11, 0x57, 0xc4, 0xb5, 0x54, 0x5c, 0x49, 0xbe, 0x0a, 0xdd, 0x56, 0x1d, 0x87, 0xde, 0xef,
	0x16, 0xec, 0xbf, 0xe6, 0x7c, 0x49, 0xf3, 0xd1, 0x32, 0x9c, 0xb1, 0xe8, 0x82, 0x56, 0xe8, 0x08,
	0xf6, 0x49, 0x51, 0xe4, 0x2c, 0x5c, 0x16, 0x34, 0x48, 0xc9, 0x9c, 0x72, 0xd7, 0xe8, 0x5b, 0xc7,
	0x36, 0xde, 0x5b, 0xc3, 0x97, 0x02, 0x45, 0x4f, 0xa1, 0x95, 0x04, 0x7c, 0x2a, 0x8f, 0xeb, 0xf9,
	0xad, 0xc1, 0xf9, 0xd9, 0x08, 0x5b, 0xc9, 0x78, 0x8a, 0x3e, 0x86, 0x4e, 0x12, 0xe4, 0x24, 0x8d,
	0xe5, 0xc9, 0x2b, 0xaa, 0x9d, 0x60, 0x92, 0xc6, 0xe8, 0x19, 0xb4, 0x43, 0x92, 0x07, 0xa5, 0xac,
	0xa2, 0xe7, 0xb7, 0x05, 0xe7, 0xe3, 0x56, 0x48, 0xf2, 0x9b, 0x15, 0x57, 0xb9, 0xed, 0x6d, 0xee,
	0x56, 0x24, 0x15, 0xdc, 0x64, 0xe8, 0x76, 0xf4, 0xa4, 0x21, 0xc9, 0x7f, 0x1c, 0xae, 0x49, 0xdf,
	0xed, 0x6e, 0x93, 0xfe, 0x9a, 0x3c, 0x75, 0x77, 0xb6, 0xc9, 0x53, 0xf4, 0x0c, 0xec, 0x45, 0x9e,
	0x65, 0x77, 0x41, 0x14, 0x94, 0xae, 0x2d, 0x85, 0xe9, 0x4a, 0xe0, 0xec, 0xa6, 0xe1, 0x78, 0x50,
	0xba, 0xa0, 0x71, 0xe3, 0x1b, 0x7d, 0x5f, 0xe5, 0xf6, 0xf4, 0x7d, 0xb7, 0xfa, 0xbe, 0xca, 0x75,
	0xf4, 0x7d, 0xb7, 0x08, 0x41, 0x2b, 0x21, 0x3c, 0x71, 0x77, 0x25, 0x2c, 0xbf, 0xbd, 0x23, 0xb0,
	0xc7, 0x34, 0xca, 0x69, 0x21, 0xe4, 0x7f, 0x97, 0xed, 0x6f, 0xc0, 0x56, 0x6e, 0x89, 0x85, 0x9f,
	0x80, 0xc5, 0xf8, 0x54, 0x2e, 0xed, 0xf9, 0x30, 0x58, 0x67, 0xc0, 0x02, 0x46, 0x1e, 0x58, 0x6c,
	0xb1, 0xf2, 0xe6, 0xc9, 0x60, 0xcb, 0x64, 0x2c, 0x48, 0xef, 0x2f, 0x13, 0x76, 0xaf, 0xf9, 0x7b,
	0xf4, 0xfe, 0x00, 0x8c, 0xb7, 0x9b, 0xbe, 0x1b, 0x6f, 0x35, 0x63, 0xdb, 0xef, 0x32, 0xb6, 0x73,
	0xdf, 0xd8, 0xa7, 0xd0, 0xad, 0x3d, 0x90, 0xb6, 0x3b, 0xb8, 0xa3, 0x1c, 0x68, 0x08, 0x2e, 0x2d,
	0x5f, 0x11, 0xe3, 0xb5, 0xfa, 0x76, 0xa3, 0x3e, 0xfa, 0x10, 0xac, 0xeb, 0xd1, 0x85, 0xf4, 0x77,
	0x7d, 0x93, 0xeb, 0xd1, 0x85, 0xf7, 0x2d, 0xb4, 0xaf, 0x72, 0x12, 0x51, 0x51, 0xf5, 0x55, 0x2d,
	0xf3, 0xaa, 0xea, 0x2b, 0xd4, 0x07, 0x6b, 0xb9, 0xd6, 0x77, 0x6f, 0xb0, 0x21, 0x23, 0x16, 0x94,
	0x37, 0x80, 0x8e, 0xdc, 0xcf, 0xd1, 0xe7, 0x60, 0x17, 0xe2, 0xeb, 0x67, 0xc6, 0x0b, 0xa9, 0x67,
	0xcf, 0xef, 0x0c, 0x24, 0x87, 0x1b, 0xc2, 0x7b, 0xae, 0xcc, 0x78, 0xa4, 0x13, 0xbc, 0x37, 0xd0,
	0x15, 0xb4, 0x20, 0xc4, 0xd9, 0x6b, 0xe7, 0xd5, 0xd9, 0x9a, 0xfb, 0x4b, 0x3e, 0xfd, 0x1f, 0xd5,
	0x7d, 0x03, 0xfb, 0x63, 0x36, 0x49, 0x69, 0xfc, 0x6a, 0x65, 0x2c, 0x42, 0x60, 0x90, 0x3a, 0xa9,
	0x92, 0xc1, 0x20, 0x02, 0x0b, 0x37, 0x4c, 0x36, 0x42, 0xef, 0x6f, 0x03, 0xf6, 0x7f, 0x62, 0x71,
	0x4c, 0xd3, 0x66, 0xef, 0x73, 0xe8, 0x72, 0x36, 0x99, 0x93, 0x60, 0xb8, 0x91, 0xa1, 0x23, 0xc1,
	0x61, 0x43, 0xfb, 0x1b, 0xc9, 0x14, 0xed, 0x37, 0xf4, 0xe9, 0x46, 0xd7, 0x28, 0xfa, 0x54, 0xf7,
	0xb9, 0xf5, 0x98, 0xcf, 0x6d, 0xdd, 0x67, 0x8f, 0x03, 0x9c, 0xe5, 0x34, 0xa6, 0x69, 0xc1, 0xc8,
	0x0c, 0x7d, 0x09, 0xed, 0x28, 0xa7, 0x31, 0xaf, 0xb5, 0x7f, 0x32, 0xd8, 0xba, 0x39, 0x56, 0xf4,
	0x43, 0xdd, 0x6f, 0x3e, 0xd8, 0xfd, 0x87, 0xd0, 0x16, 0x08, 0x77, 0xad, 0xbe, 0x75, 0xec, 0x60,
	0x15, 0x78, 0xff, 0x9a, 0xe0, 0x5c, 0x56, 0x73, 0x91, 0x9c, 0x14, 0xcb, 0x9c, 0x8a, 0xce, 0xa2,
	0xc5, 0xa6, 0xa4, 0x02, 0x40, 0x87, 0x60, 0x96, 0x6c, 0x43, 0x08, 0xb3, 0x64, 0xa2, 0xca, 0x84,
	0xc5, 0x54, 0x25, 0x15, 0x55, 0x6e, 0x69, 0x8c, 0x15, 0xdd, 0x1c, 0xde, 0xd2, 0x0e, 0x17, 0x68,
	0x9a, 0xa5, 0x11, 0xad, 0x85, 0x50, 0x01, 0x7a, 0x09, 0x1f, 0xe4, 0xf4, 0xb7, 0x2c, 0x22, 0x05,
	0xcb, 0xd2, 0x60, 0x31, 0x0d, 0x38, 0x9b, 0xc8, 0x49, 0x72, 0xf0, 0x7e, 0x43, 0x8c, 0xa6, 0x63,
	0x36, 0x11, 0x19, 0xe8, 0x22, 0x8b, 0x12, 0x39, 0x4b, 0x16, 0x56, 0x01, 0x3a, 0x87, 0xc3, 0x34,
	0x4b, 0x03, 0x3d, 0x8b, 0x90, 0xb8, 0x7e, 0x4a, 0x0f, 0x06, 0x97, 0x59, 0x8a, 0x9b, 0x44, 0x82,
	0xc2, 0x28, 0xbd, 0x87, 0xa1, 0xaf, 0xe1, 0x40, 0x4b, 0x21, 0x53, 0x07, 0x8b, 0xa9, 0x9c, 0xc3,
	0xf5, 0x54, 0x69, 0xa5, 0x9e, 0x8b, 0x05, 0xa3, 0xa9, 0xf7, 0xa7, 0x01, 0x3d, 0x61, 0x24, 0xa6,
	0xbf, 0x2e, 0x29, 0x2f, 0x84, 0xa2, 0x69, 0x35, 0xdf, 0x54, 0x34, 0xad, 0xe6, 0xe8, 0x05, 0x38,
	0x4c, 0xbe, 0x70, 0x81, 0x12, 0x41, 0xbd, 0x98, 0x3d, 0x85, 0x5d, 0x4a, 0x29, 0xb4, 0x26, 0xb2,
	0x36, 0x9a, 0xe8, 0x23, 0xd8, 0xa9, 0x9b, 0x68, 0x58, 0xb7, 0x57, 0xfd, 0x58, 0x0f, 0x35, 0xca,
	0xaf, 0x75, 0xad, 0x29, 0xdf, 0x9b, 0x03, 0xba, 0x7f, 0x75, 0xf4, 0x05, 0xec, 0x69, 0xd7, 0x24,
	0xb3, 0x89, 0x2c, 0xb5, 0x8d, 0x77, 0x1b, 0xf4, 0xd5, 0x6c, 0x82, 0xbe, 0x7a, 0x44, 0x54, 0x55,
	0xf6, 0x03, 0xfa, 0x79, 0xff, 0x18, 0xf0, 0x69, 0xd3, 0xd1, 0x0d, 0xfb, 0x3a, 0xbd, 0xcb, 0xf2,
	0xb9, 0xfc, 0x6c, 0x0c, 0x34, 0x74, 0x03, 0xfb, 0xb0, 0xb3, 0x96, 0xdb, 0xd4, 0xe5, 0xee, 0x52,
	0x25, 0x32, 0xea, 0x83, 0xb3, 0x5a, 0x21, 0xfb, 0x43, 0xc9, 0x03, 0x35, 0x2d, 0x5a, 0xe3, 0xfe,
	0xb5, 0x5a, 0x0f, 0x5d, 0xeb, 0x08, 0xb4, 0xa6, 0x0a, 0x62, 0x52, 0x90, 0x5a, 0x35, 0x6d, 0xf7,
	0xf7, 0xa4, 0x20, 0xde, 0x1f, 0xc2, 0x56, 0x9a, 0x17, 0xec, 0x8e, 0x45, 0xa4, 0xa0, 0xe2, 0xb7,
	0x24, 0x4a, 0x65, 0xd9, 0x36, 0x36, 0xa3, 0x54, 0x3c, 0xd3, 0x62, 0xfc, 0x64, 0xbd, 0x36, 0x96,
	0xdf, 0xc2, 0xbf, 0x88, 0xc8, 0xa9, 0x94, 0x05, 0xda, 0xb8, 0x13, 0x11, 0x31, 0x8d, 0xe8, 0x33,
	0xd8, 0xe5, 0x34, 0x67, 0x64, 0x16, 0xa4, 0xcb, 0x79, 0x48, 0x73, 0x59, 0x9b, 0x8d, 0x1d, 0x05,
	0x5e, 0x4a, 0x4c, 0x68, 0x93, 0x64, 0xbc, 0x10, 0xef, 0x84, 0x18, 0x68, 0x15, 0x7c, 0xf7, 0xf2,
	0x97, 0xe3, 0x09, 0x2b, 0x92, 0x65, 0x38, 0x88, 0xb2, 0xf9, 0x49, 0x52, 0x2d, 0x68, 0x3e, 0xa3,
	0xf1, 0x84, 0xe6, 0x27, 0x77, 0x24, 0xcc, 0x59, 0x74, 0xa2, 0xfe, 0xcb, 0x16, 0xb3, 0x25, 0x0f,
	0x3b, 0xf2, 0xe7, 0xec, 0xf4, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0xd2, 0x5f, 0xab, 0xac,
	0x09, 0x00, 0x00,
}
